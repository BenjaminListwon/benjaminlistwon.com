<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vue on Benjamin Listwon</title>
    <link>https://benjaminlistwon.com/tags/vue/</link>
    <description>Recent content in Vue on Benjamin Listwon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Nov 2016 10:00:00 -0700</lastBuildDate>
    
	<atom:link href="https://benjaminlistwon.com/tags/vue/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Strategies for extending Vue</title>
      <link>https://benjaminlistwon.com/blog/strategies-for-extending-vue/</link>
      <pubDate>Fri, 04 Nov 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/strategies-for-extending-vue/</guid>
      <description>A few weeks back, someone reached out over email with a question about how to add support for capturing mouse events that took place within the bounds of a Vue component. Off the top of my head I could think of couple ways to do it, but none of them were very sustainable or extensible.
So I did the only thing I know to do in such a situation; I whipped up some code and compared the different ways of achieving the same goals in Vue.</description>
    </item>
    
    <item>
      <title>Vuex Chat Part 2</title>
      <link>https://benjaminlistwon.com/blog/vuex-chat-part-2/</link>
      <pubDate>Wed, 28 Sep 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/vuex-chat-part-2/</guid>
      <description>In my last post, we took a look at how you might implement shared state in your Vue.js app by comparing a vuex implementation with a hand-coded alternative. Incorporating vuex, as we saw, is pretty straightforward once the core concept of one-way data flow in Vue makes sense.
This time, I&amp;rsquo;d like to take the demo a little further by introducing modules, constants for mutation names, and organizing our actions a bit differently.</description>
    </item>
    
    <item>
      <title>Data Flow in Vue and Vuex</title>
      <link>https://benjaminlistwon.com/blog/data-flow-in-vue-and-vuex/</link>
      <pubDate>Wed, 21 Sep 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/data-flow-in-vue-and-vuex/</guid>
      <description>&lt;p&gt;&lt;em&gt;(Update 10/14/16: This article has been &lt;a href=&#34;http://www.jianshu.com/p/2e0b6d19dd6a&#34;&gt;translated into simplified Chinese&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/sqrtthree&#34;&gt;@sqrtthree&lt;/a&gt;. Also &lt;a href=&#34;http://gold.xitu.io/entry/58007bcf0bd1d00058eefe69/&#34;&gt;available here&lt;/a&gt;.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It seems like one of the things that trips people up in &lt;a href=&#34;https://vuejs.org&#34;&gt;Vue&lt;/a&gt; is how to share state across components. For those new to reactive programming, something like &lt;a href=&#34;https://github.com/vuejs/vuex/&#34;&gt;vuex&lt;/a&gt; can seem daunting with loads of new jargon and the way it separates concerns. It can also seem like overkill when all you want is to share one or two pieces of data.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Short Order Vue: A Vue 2.0 App</title>
      <link>https://benjaminlistwon.com/blog/short-order-vue-a-vue-20-app/</link>
      <pubDate>Fri, 16 Sep 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/short-order-vue-a-vue-20-app/</guid>
      <description>On Wednesday I shared some of the resources Iâ€™ve been using to move from previous releases of Vue to the new Vue 2.0 API. (BTW: Iâ€™ve got a few more links to add, thanks to some great folks on Twitter.) The biggest changes in 2.0 arenâ€™t really in the API itself, but there are a few tricky bits here and there.
As Iâ€™ve proceeded, Iâ€™ve found it is a little easier to just start some mini projects from scratch to test out some of the new functionality, as opposed to trying to reason about how to rewrite old code.</description>
    </item>
    
    <item>
      <title>Vue 2.0</title>
      <link>https://benjaminlistwon.com/blog/vue-20/</link>
      <pubDate>Wed, 14 Sep 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/vue-20/</guid>
      <description>(Update 11/14/16: This article has been translated into Japanese by Chiharu Shibata.)
A couple weeks back I got back from holiday, my son started the new school year, and once again the home office was calm and quiet. While I was away, someone had reached out about a Vue component I mentioned I was writing to use a Handsontable (HOT) in a Vue app. I mentioned that I was about to start converting it over to Vue 2.</description>
    </item>
    
    <item>
      <title>Vue.js Resources</title>
      <link>https://benjaminlistwon.com/resource/vue/</link>
      <pubDate>Wed, 14 Sep 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/resource/vue/</guid>
      <description>This page contains resources related to the Vue.js framework, as well as the major modules and plugins in the Vue.js ecosystem (vuex, vue-router, etc). As always, if thee&amp;rsquo;s something I&amp;rsquo;m missing, go ahead and let me know, and I will add it.
Community  Vue Forum Definitely join. Loads of discussion, group problem solving, and searchable posts. Vue on Gitter Like a Slack/IRC channel, specifically for Vue.js discussion. Vue Newsletter ðŸ†• Stay up-to-date on all things Vue.</description>
    </item>
    
    <item>
      <title>Getting Started (Even Faster) With Vue.js</title>
      <link>https://benjaminlistwon.com/blog/getting-started-even-faster-with-vuejs/</link>
      <pubDate>Sat, 19 Mar 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/getting-started-even-faster-with-vuejs/</guid>
      <description>It never fails. Just a few hours after I hit publish on my last post, the great folks behind Vue.js and the boilerplate templates, cranked out a new template aimed at beginners. You just use node to install the Vue cli (think Composer) and use it to pull in the template.
The result? A single page HTML file that pulls Vue in from a CDN and you are off and running.</description>
    </item>
    
    <item>
      <title>Getting Started With Vue.js</title>
      <link>https://benjaminlistwon.com/blog/getting-started-with-vuejs/</link>
      <pubDate>Fri, 18 Mar 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/getting-started-with-vuejs/</guid>
      <description>(Update: The folks at Vue made an even easier startup template. I wrote a quick post about it here.)
Since Polymer went 1.0, I have built a couple small, personal projects with it. Those experiences have gone great, but some of the rigidity of Polymerâ€™s elements and API continued to bug me.
Now Iâ€™m working on shipping my first public project in a while, and Iâ€™ve bumped into some challenges with Polymer.</description>
    </item>
    
  </channel>
</rss>