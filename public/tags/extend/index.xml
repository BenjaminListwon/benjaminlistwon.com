<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Extend on Benjamin Listwon</title>
    <link>https://benjaminlistwon.com/tags/extend/</link>
    <description>Recent content in Extend on Benjamin Listwon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Nov 2016 10:00:00 -0700</lastBuildDate>
    
	<atom:link href="https://benjaminlistwon.com/tags/extend/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Strategies for extending Vue</title>
      <link>https://benjaminlistwon.com/blog/strategies-for-extending-vue/</link>
      <pubDate>Fri, 04 Nov 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/strategies-for-extending-vue/</guid>
      <description>A few weeks back, someone reached out over email with a question about how to add support for capturing mouse events that took place within the bounds of a Vue component. Off the top of my head I could think of couple ways to do it, but none of them were very sustainable or extensible.
So I did the only thing I know to do in such a situation; I whipped up some code and compared the different ways of achieving the same goals in Vue.</description>
    </item>
    
  </channel>
</rss>