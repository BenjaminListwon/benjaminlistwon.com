<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Benjamin Listwon</title>
    <link>https://benjaminlistwon.com/</link>
    <description>Recent content on Benjamin Listwon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Nov 2016 10:00:00 -0700</lastBuildDate>
    
	<atom:link href="https://benjaminlistwon.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Strategies for extending Vue</title>
      <link>https://benjaminlistwon.com/blog/strategies-for-extending-vue/</link>
      <pubDate>Fri, 04 Nov 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/strategies-for-extending-vue/</guid>
      <description>A few weeks back, someone reached out over email with a question about how to add support for capturing mouse events that took place within the bounds of a Vue component. Off the top of my head I could think of couple ways to do it, but none of them were very sustainable or extensible.
So I did the only thing I know to do in such a situation; I whipped up some code and compared the different ways of achieving the same goals in Vue.</description>
    </item>
    
    <item>
      <title>Vuex Chat Part 2</title>
      <link>https://benjaminlistwon.com/blog/vuex-chat-part-2/</link>
      <pubDate>Wed, 28 Sep 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/vuex-chat-part-2/</guid>
      <description>In my last post, we took a look at how you might implement shared state in your Vue.js app by comparing a vuex implementation with a hand-coded alternative. Incorporating vuex, as we saw, is pretty straightforward once the core concept of one-way data flow in Vue makes sense.
This time, I&amp;rsquo;d like to take the demo a little further by introducing modules, constants for mutation names, and organizing our actions a bit differently.</description>
    </item>
    
    <item>
      <title>Data Flow in Vue and Vuex</title>
      <link>https://benjaminlistwon.com/blog/data-flow-in-vue-and-vuex/</link>
      <pubDate>Wed, 21 Sep 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/data-flow-in-vue-and-vuex/</guid>
      <description>&lt;p&gt;&lt;em&gt;(Update 10/14/16: This article has been &lt;a href=&#34;http://www.jianshu.com/p/2e0b6d19dd6a&#34;&gt;translated into simplified Chinese&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/sqrtthree&#34;&gt;@sqrtthree&lt;/a&gt;. Also &lt;a href=&#34;http://gold.xitu.io/entry/58007bcf0bd1d00058eefe69/&#34;&gt;available here&lt;/a&gt;.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It seems like one of the things that trips people up in &lt;a href=&#34;https://vuejs.org&#34;&gt;Vue&lt;/a&gt; is how to share state across components. For those new to reactive programming, something like &lt;a href=&#34;https://github.com/vuejs/vuex/&#34;&gt;vuex&lt;/a&gt; can seem daunting with loads of new jargon and the way it separates concerns. It can also seem like overkill when all you want is to share one or two pieces of data.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hooray for Hugo!</title>
      <link>https://benjaminlistwon.com/blog/hooray-for-hugo/</link>
      <pubDate>Mon, 19 Sep 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/hooray-for-hugo/</guid>
      <description>The old site was getting a little clunky, despite being only a few months in service. I had never intended for the design to last very long in the first place, and I certainly didn&amp;rsquo;t expect to get anywhere near the level of traction I got for some posts. Thank you all for reading!
This new site is running on Hugo, an amazing static site generator written in Go. If you are looking to start any sort of content-driven site, or feel like the old one is outgrowing its roots, I encourage you to give Hugo a serious look.</description>
    </item>
    
    <item>
      <title>Short Order Vue: A Vue 2.0 App</title>
      <link>https://benjaminlistwon.com/blog/short-order-vue-a-vue-20-app/</link>
      <pubDate>Fri, 16 Sep 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/short-order-vue-a-vue-20-app/</guid>
      <description>On Wednesday I shared some of the resources I‚Äôve been using to move from previous releases of Vue to the new Vue 2.0 API. (BTW: I‚Äôve got a few more links to add, thanks to some great folks on Twitter.) The biggest changes in 2.0 aren‚Äôt really in the API itself, but there are a few tricky bits here and there.
As I‚Äôve proceeded, I‚Äôve found it is a little easier to just start some mini projects from scratch to test out some of the new functionality, as opposed to trying to reason about how to rewrite old code.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://benjaminlistwon.com/about/</link>
      <pubDate>Thu, 15 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://benjaminlistwon.com/about/</guid>
      <description>Hello,
I am a designer, developer, and proud father, living in the greater Seattle area. I have spent the last two decades building apps, websites and software with some terrific folks, and now I am striking out on my own.
I started this blog to document all the technical challenges, a-ha moments and little nuggets I come across as I build digital products, learn new technolgies, and push my own skillset.</description>
    </item>
    
    <item>
      <title>Blog Archive</title>
      <link>https://benjaminlistwon.com/archive/</link>
      <pubDate>Thu, 15 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://benjaminlistwon.com/archive/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Vue 2.0</title>
      <link>https://benjaminlistwon.com/blog/vue-20/</link>
      <pubDate>Wed, 14 Sep 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/vue-20/</guid>
      <description>(Update 11/14/16: This article has been translated into Japanese by Chiharu Shibata.)
A couple weeks back I got back from holiday, my son started the new school year, and once again the home office was calm and quiet. While I was away, someone had reached out about a Vue component I mentioned I was writing to use a Handsontable (HOT) in a Vue app. I mentioned that I was about to start converting it over to Vue 2.</description>
    </item>
    
    <item>
      <title>Vue.js Resources</title>
      <link>https://benjaminlistwon.com/resource/vue/</link>
      <pubDate>Wed, 14 Sep 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/resource/vue/</guid>
      <description>This page contains resources related to the Vue.js framework, as well as the major modules and plugins in the Vue.js ecosystem (vuex, vue-router, etc). As always, if thee&amp;rsquo;s something I&amp;rsquo;m missing, go ahead and let me know, and I will add it.
Community  Vue Forum Definitely join. Loads of discussion, group problem solving, and searchable posts. Vue on Gitter Like a Slack/IRC channel, specifically for Vue.js discussion. Vue Newsletter üÜï Stay up-to-date on all things Vue.</description>
    </item>
    
    <item>
      <title>A Case For Writing It Yourself</title>
      <link>https://benjaminlistwon.com/blog/a-case-for-writing-it-yourself/</link>
      <pubDate>Thu, 11 Aug 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/a-case-for-writing-it-yourself/</guid>
      <description>Over the years I‚Äôve vacillated between the two extremes of ‚Äúroll your own code‚Äù and ‚Äúthrow together a bunch of libraries.‚Äù I suspect I‚Äôm not alone in this endless pursuit of ‚Äúthe best‚Äù way to build software.
In the end, we all know that each project is unique, and perhaps more importantly, its requirements will change with time. A library you rely upon today may not have all the capabilities you need tomorrow, or perhaps, after real usage data pours in, you realize you only need 1/100th of some module‚Äôs functionality and that you can easily write that bit on your own.</description>
    </item>
    
    <item>
      <title>Back In Action</title>
      <link>https://benjaminlistwon.com/blog/back-in-action/</link>
      <pubDate>Wed, 03 Aug 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/back-in-action/</guid>
      <description>It‚Äôs been a long summer so far, but it has seemingly flown by. I know it has been a while since I‚Äôve posted anything here, but it is for a couple of great reasons.
First, I‚Äôve been spending some more time with my son‚Äîplaying basketball, biking, hunting for blackberries (and Pokemon)‚Äîand with friends, both new and lifelong. Getting to spend time with people I love and whose opinions and outlook I value has been restorative and very welcome.</description>
    </item>
    
    <item>
      <title>Diving Deeper on Tesla and Consumer Protections</title>
      <link>https://benjaminlistwon.com/blog/diving-deeper-on-tesla-and-consumer-protections/</link>
      <pubDate>Thu, 07 Jul 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/diving-deeper-on-tesla-and-consumer-protections/</guid>
      <description>Tesla v Fortune Just a few hours after I posted yesterday, a couple different folks directed me to Tesla‚Äôs blog post regarding the Joshua Brown‚Äôs fatal crash on ‚Äòautopilot‚Äô and an article by Fortune that is critical of Tesla and CEO Elon Musk.
It took me some time to digest both pieces, as well as some additional information surrounding them, but the timelines they present are clearly different than those that were more broadly reported in the media.</description>
    </item>
    
    <item>
      <title>Carpetbaggers and Disruption‚Äôs Human Costs</title>
      <link>https://benjaminlistwon.com/blog/carpetbaggers-and-disruptions-human-costs/</link>
      <pubDate>Wed, 06 Jul 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/carpetbaggers-and-disruptions-human-costs/</guid>
      <description>Update (July 06, 8:00PM): Someone pointed out Tesla&amp;rsquo;s rebuttal to a Fortune article which presents different information about the timeline of Joshua Brown&amp;rsquo;s death. The only date I have referred to below is June 30, the date of Tesla&amp;rsquo;s press release, while it appears the accident itself occurred on May 7.
I will write more tomorrow about the new information both articles present, as well as a response to some questions about my position on innovation, &amp;lsquo;autopilot&amp;rsquo; and technology.</description>
    </item>
    
    <item>
      <title>Only As Hard As We Make It</title>
      <link>https://benjaminlistwon.com/blog/only-as-hard-as-we-make-it/</link>
      <pubDate>Fri, 03 Jun 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/only-as-hard-as-we-make-it/</guid>
      <description>Someone recently shared a link to Has Design Become Too Hard?, an article by Jeffrey Zeldman about the changing landscape of designing for the web and the tools that we use to do that job. [1]
Ignoring the salesmanship for a moment, the article makes a couple of important points, and misses something I think we overlook in our profession: not everyone wants to do it all on their own.</description>
    </item>
    
    <item>
      <title>The New, New Media</title>
      <link>https://benjaminlistwon.com/blog/the-new-new-media/</link>
      <pubDate>Thu, 26 May 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/the-new-new-media/</guid>
      <description>Here&amp;rsquo;s the thing about virtual reality (VR) and augmented reality (AR). (Collectively I will call them V/AR for now.)
If your expectation is something like‚Äî ‚ÄúBut when I see The Weeknd live, I can feel the bass.‚Äù or ‚ÄúPart of actually being in Paris is the noise, the smell, the sound.‚Äù or ‚ÄúBut I can‚Äôt touch the things I see.‚Äù ‚Äîthen you should embrace those real experiences as they are, in the present, in all their glory.</description>
    </item>
    
    <item>
      <title>No Really, For Everyone</title>
      <link>https://benjaminlistwon.com/blog/no-really-for-everyone/</link>
      <pubDate>Wed, 25 May 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/no-really-for-everyone/</guid>
      <description>Last week, Rob Brackett tweeted a link to A web for everyone, an article by Jeremy Keith. In that article, Jeremy discusses the need to build products for the web that are accessible to all audiences, not just those with bleeding edge functionality:
 I wish we could make offline functionality a requirement. But the reality is that not everyone is using a browser that supports the necessary technology. I wish we could make beautiful typography a requirement.</description>
    </item>
    
    <item>
      <title>Minimalism: It Takes Effort Too</title>
      <link>https://benjaminlistwon.com/blog/minimalism-it-takes-effort-too/</link>
      <pubDate>Mon, 23 May 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/minimalism-it-takes-effort-too/</guid>
      <description>Last Wednesday, Mike Rundle tweeted about Smartisan‚Äôs T2, an Android phone that features a completely custom UI:
Wow, Smartisan OS is a custom Android implementation with truly beautiful icons and UI work. https://t.co/Zk8Bh9gd2T pic.twitter.com/FUiqXFYYbX
‚Äî Mike Rundle (@flyosity) May 18, 2016 It looks awesome‚Äîthe phone, the OS, everything. Anyway, a short time later in Slack, someone shared the same tweet and asked:
 I admit that maybe I don&amp;rsquo;t get design, because I&amp;rsquo;m not a designer by trade ‚Ä¶ but is iOS 6-style design really &amp;ldquo;better&amp;rdquo; as many designers imply, or is it just a retro factor/change is hard/other things I may not understand?</description>
    </item>
    
    <item>
      <title>On Semantic Markup</title>
      <link>https://benjaminlistwon.com/blog/on-semantic-markup/</link>
      <pubDate>Wed, 18 May 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/on-semantic-markup/</guid>
      <description>The Backdrop (In which the author is, once again, too hasty.)
Yesterday, I saw this tweet pass through my timeline:
@snookca x1000 this. Reading that ALA article, I had two thoughts‚Ä¶
1. ALA used to have good content.
2. What year is it? Did we go *back*?
‚Äî Nathan Smith (@nathansmith) May 17, 2016 Naturally, I was immediately curious about what Jonathan had written, and what the ALA article was about.</description>
    </item>
    
    <item>
      <title>Respons-O-Matic Part 2</title>
      <link>https://benjaminlistwon.com/blog/respons-o-matic-part-2/</link>
      <pubDate>Wed, 11 May 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/respons-o-matic-part-2/</guid>
      <description>Yesterday I pushed out Respons-O-Matic, a very simplistic tool to preview RWD layouts, without much thought to how others might use it. Unsurprisingly, a few folks had some really great feedback on their own workflows, and how to make Respons-O-Matic play nicer.
Check out the updated demo if you want to see it in action, or head to the repository on Github for the code.
Here‚Äôs what‚Äôs new or different:</description>
    </item>
    
    <item>
      <title>Respons-O-Matic</title>
      <link>https://benjaminlistwon.com/blog/respons-o-matic/</link>
      <pubDate>Tue, 10 May 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/respons-o-matic/</guid>
      <description>This weekend I was testing out some new layouts I‚Äôve been working on, and I built myself a little tool to preview Responsive (RWD) layouts more easily.
I thought it might be of use to some other folks as well.
It looks like this:

And you can check out a demo or go snag the repository on Github and have at it.
Further Reading As I write in the FAQ section of the repo, Respons-O-Matic is not meant to be a substitute for real, on-device testing, or anything else for that matter.</description>
    </item>
    
    <item>
      <title>Tidbits</title>
      <link>https://benjaminlistwon.com/blog/tidbits/</link>
      <pubDate>Thu, 28 Apr 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/tidbits/</guid>
      <description>Wowzers, have the days simply flown by in April! It has been a little while since my last post, and this one is going to be a brief one to be sure, but I wanted to catch up to what‚Äôs been going on this month.
Reboot! First up, May 1st Reboot is right around the corner. Just three days left to crank! If you‚Äôre launching, relaunching or just breathing new life into something on the web, you should check it out and follow #May1Reboot to see what our colleagues and community are up to.</description>
    </item>
    
    <item>
      <title>When To Look Beyond jQuery</title>
      <link>https://benjaminlistwon.com/blog/when-to-look-beyond-jquery/</link>
      <pubDate>Tue, 12 Apr 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/when-to-look-beyond-jquery/</guid>
      <description>(Update: Forgot to include ScrollMagic. Big oops!)
Before I continue, I wanted to set forth what this post is about. It is not a teardown of jQuery or a preachy case for using such-and-such a JavaScript framework.
Rather, it is an acknowledgement of two things:
 If your target is modern browsers (really anything post IE8) and you are building something of modest size, then any library or framework, jQuery or otherwise, may be overkill.</description>
    </item>
    
    <item>
      <title>In Brief #008: The Case Of The Disappearing Id Values</title>
      <link>https://benjaminlistwon.com/blog/in-brief-008-the-case-of-the-disappearing-id-values/</link>
      <pubDate>Thu, 07 Apr 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/in-brief-008-the-case-of-the-disappearing-id-values/</guid>
      <description>It&amp;rsquo;s midnight, and for the past hour I‚Äôve been trying to figure out why I was unable to echo the correct id values for rows of data in my blade templates. I thought I was going crazy. Here‚Äôs the relevant template snippet, and its output:
feed/index.blade.php &amp;lt;ul&amp;gt; @foreach ($feeds as $feed) &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/feed/{{ $feed-&amp;gt;id }}&amp;quot;&amp;gt;{{ $feed-&amp;gt;title }}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; @endforeach &amp;lt;/ul&amp;gt;  Output &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/feed/0&amp;quot;&amp;gt;BBC News - Business&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt;  There is obviously a value in the object sent to the template, which meant the id attribute was present at least.</description>
    </item>
    
    <item>
      <title>In Brief #007: An Update On MySQL &#43; JSON</title>
      <link>https://benjaminlistwon.com/blog/in-brief-007-an-update-on-mysql-json/</link>
      <pubDate>Wed, 06 Apr 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/in-brief-007-an-update-on-mysql-json/</guid>
      <description>After publishing Part 2 of a series on JSON data in MySQL last week, a few folks reached out to me with some great feedback. Not only that, but they shared some resources I thought would be beneficial to pass on.
Morgan Tocker, the Product Manager that works on JSON support in MySQL pointed me toward the MySQL Server Team‚Äôs blog, which is more approachable than the docs for topical matters and directed discussion.</description>
    </item>
    
    <item>
      <title>Working With JSON Data In MySQL - Part 2 of 3</title>
      <link>https://benjaminlistwon.com/blog/working-with-json-data-in-mysql-part-2-of-3/</link>
      <pubDate>Fri, 01 Apr 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/working-with-json-data-in-mysql-part-2-of-3/</guid>
      <description>In last week‚Äôs post, Part 1 of 3, we took a look at the JSON data type support added in MySQL 5.7.8. This week, I wanted to look at some of the document-oriented patterns that MongoDB uses so we can see how we might accomplish the same in MySQL.
The goal is not to 100% replicate what Mongo does, but to see which patterns will make the best use of JSON support in MySQL, allowing us to get the best of an SQL store and a document-oriented one.</description>
    </item>
    
    <item>
      <title>Working With JSON Data In MySQL - Part 1 of 3</title>
      <link>https://benjaminlistwon.com/blog/working-with-json-data-in-mysql-part-1-of-3/</link>
      <pubDate>Wed, 23 Mar 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/working-with-json-data-in-mysql-part-1-of-3/</guid>
      <description>This is the first in a series of posts about the MySQL JSON data type, how it compares to working with a document-oriented store like MongoDB, and how we can make use of it in the Laravel framework.
 Part 1 is a quick look at the data type itself, and some of the functions available to work with that data. Specifically, we‚Äôll focus on what kind of data to store and how to work with it, regardless of framework.</description>
    </item>
    
    <item>
      <title>Getting Started (Even Faster) With Vue.js</title>
      <link>https://benjaminlistwon.com/blog/getting-started-even-faster-with-vuejs/</link>
      <pubDate>Sat, 19 Mar 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/getting-started-even-faster-with-vuejs/</guid>
      <description>It never fails. Just a few hours after I hit publish on my last post, the great folks behind Vue.js and the boilerplate templates, cranked out a new template aimed at beginners. You just use node to install the Vue cli (think Composer) and use it to pull in the template.
The result? A single page HTML file that pulls Vue in from a CDN and you are off and running.</description>
    </item>
    
    <item>
      <title>Getting Started With Vue.js</title>
      <link>https://benjaminlistwon.com/blog/getting-started-with-vuejs/</link>
      <pubDate>Fri, 18 Mar 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/getting-started-with-vuejs/</guid>
      <description>(Update: The folks at Vue made an even easier startup template. I wrote a quick post about it here.)
Since Polymer went 1.0, I have built a couple small, personal projects with it. Those experiences have gone great, but some of the rigidity of Polymer‚Äôs elements and API continued to bug me.
Now I‚Äôm working on shipping my first public project in a while, and I‚Äôve bumped into some challenges with Polymer.</description>
    </item>
    
    <item>
      <title>In Brief #006: Tokenizing Ids</title>
      <link>https://benjaminlistwon.com/blog/in-brief-006-tokenizing-ids/</link>
      <pubDate>Wed, 16 Mar 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/in-brief-006-tokenizing-ids/</guid>
      <description>As I was designing an API this last week, I decided that I wanted to obfuscate object ids in the JSON messages I sent back and forth. To do so, I wanted to use the terrific Hashids library, so I sniffed out this Laravel wrapper for it.
composer.json &amp;quot;require&amp;quot;: { ... &amp;quot;hashids/hashids&amp;quot;: &amp;quot;1.0.6&amp;quot;, &amp;quot;vinkla/hashids&amp;quot;: &amp;quot;2.2.2&amp;quot;, ... }  Note: You should peg your versions in Composer so you avoid incompatible hashes down the road, especially if you store computed hashes for use or comparison later.</description>
    </item>
    
    <item>
      <title>In Brief #005: Updating Cartalyst Tagged Models</title>
      <link>https://benjaminlistwon.com/blog/in-brief-005-updating-cartalyst-tagged-models/</link>
      <pubDate>Fri, 11 Mar 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/in-brief-005-updating-cartalyst-tagged-models/</guid>
      <description>I was fiddling with the blog over the last few days, updating the look-and-feel a little bit, as well as doing some housekeeping on the back end. One thing I wanted to do was migrate my posts from an old model PostModel to just plain Post. (I know, what a horrible name I started with. I have learned!)
This was no big deal, as I pretty much just had to do a quick find-and-replace for App\PostModel in my code.</description>
    </item>
    
    <item>
      <title>GitHub Third Party Access and Forge</title>
      <link>https://benjaminlistwon.com/blog/github-third-party-access-and-forge/</link>
      <pubDate>Fri, 11 Mar 2016 10:00:00 -0600</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/github-third-party-access-and-forge/</guid>
      <description>Yesterday, I created a GitHub organization so that I could house all of the projects my LLC is working on under one roof. The re-homing process from my individual GitHub user account to the organization could not have been smoother.
Once the repositories were in place, I went to spin up a new Forge instance for a new site I was working on. When I tried to deploy from GitHub, I got this error:</description>
    </item>
    
    <item>
      <title>In Brief #004: MySQL Backups On Forge, Part 2</title>
      <link>https://benjaminlistwon.com/blog/in-brief-004-mysql-backups-on-forge-part-2/</link>
      <pubDate>Mon, 07 Mar 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/in-brief-004-mysql-backups-on-forge-part-2/</guid>
      <description>If you read my last In Brief post, you may have tried setting up a cron job to run mysqldump nightly, gone back to check the results the following day and found a zero byte file where you expected to see a dumpfile.
-rw-rw-r-- 1 forge forge 0 Mar 5 00:00 dump-nightly.sql  Don&amp;rsquo;t worry! The backup still ran, but Forge does some auto-magic output redirection that had me guessing for a little while.</description>
    </item>
    
    <item>
      <title>Why Laravel? Why Now?</title>
      <link>https://benjaminlistwon.com/blog/why-laravel-why-now/</link>
      <pubDate>Fri, 04 Mar 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/why-laravel-why-now/</guid>
      <description>(Update: Can&amp;rsquo;t believe I forgot Laracasts when I wrote about the Laravel ecosystem below.)
First, a confession. I‚Äôve only been doing ‚Äúserious‚Äù Laravel development for about four or five weeks now.
In fact, it has been about a decade since I did any serious PHP development at all.
I‚Äôm still getting my hands dirty digging through how Laravel works, and I‚Äôm certainly a way off from ‚Äúmastery‚Äù of the framework, but the single best way to learn a new language, technology or framework is to have a project, a timeline, and to just get cracking.</description>
    </item>
    
    <item>
      <title>In Brief #003: MySQL Backups On Forge</title>
      <link>https://benjaminlistwon.com/blog/in-brief-003-mysql-backups-on-forge/</link>
      <pubDate>Tue, 01 Mar 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/in-brief-003-mysql-backups-on-forge/</guid>
      <description>(Update: Forge auto-magically redirects cron job output to a job specific file, which means my cronjob below doesn&amp;rsquo;t quite do what is expected. I&amp;rsquo;ve written a new post about how this affects this strategy because it made more sense than trying to correct/update this one.)
Shifting gears for a second, let‚Äôs chat about backups. I‚Äôm using Laravel Forge to run deployments on top of Linode servers. Both are ah-may-zing!</description>
    </item>
    
    <item>
      <title>In Brief #002: Updating Rows In A Migration</title>
      <link>https://benjaminlistwon.com/blog/in-brief-002-updating-rows-in-a-migration/</link>
      <pubDate>Mon, 29 Feb 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/in-brief-002-updating-rows-in-a-migration/</guid>
      <description>Laravel Migrations are a great way to manage your database tables. If you add Doctrine to your composer dependencies, then you can easily alter a table‚Äôs columns, indices and loads of other properties, without changing the way you write migrations.
Sometimes, when you alter a table to add a new column, you want to populate it with values. There‚Äôs a couple ways to do this for basic operations.
 If your column will allow a default value, you can add it as part of the migration itself $table-&amp;gt;string(&#39;colName&#39;)-&amp;gt;default(&#39;foo&#39;); You can use a Seeder to insert rows, or to run just about any query you‚Äôd like.</description>
    </item>
    
    <item>
      <title>Adding Tags In Eloquent With Cartalyst</title>
      <link>https://benjaminlistwon.com/blog/adding-tags-in-eloquent-with-cartalyst/</link>
      <pubDate>Sat, 27 Feb 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/adding-tags-in-eloquent-with-cartalyst/</guid>
      <description>When I was first building out the code for this blog, I gave some thought to how to add tagging. The Laravel Docs actually use tagging as an example of polymorphic relations. But then, over on his new jam Makers Clique, Scrivs mentioned a package called Cartalyst Tags which looked like it ticked all the boxes.
After following the installation instructions, I added a tags field to my post forms:</description>
    </item>
    
    <item>
      <title>In Brief #001: Routing With CORS</title>
      <link>https://benjaminlistwon.com/blog/in-brief-001-routing-with-cors/</link>
      <pubDate>Thu, 25 Feb 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/in-brief-001-routing-with-cors/</guid>
      <description>If you‚Äôre building an API for your app, chances are you have to build in support for CORS. Doing so in Laravel is pretty straightforward, especially if you snag the laravel-cors package from Barry van den Heuvel.
After adding laravel-cors to your project, you can just add route code like any of these:
Route::post(&#39;train&#39;, function() { return &#39;Choo, Choo!&#39;; })-&amp;gt;middleware(&#39;cors&#39;); Route::post(&#39;boat&#39;, [&#39;middleware&#39; =&amp;gt; &#39;cors&#39;, function() { return &#39;Hooooonk!&#39;; }]); Route::group([&#39;middleware&#39; =&amp;gt; &#39;cors&#39;], function($router){ $router-&amp;gt;post(&#39;car&#39;, function() { return &#39;Meep, Meep!</description>
    </item>
    
    <item>
      <title>Adding More Robust Ajax Detection In Laravel</title>
      <link>https://benjaminlistwon.com/blog/adding-more-robust-ajax-detection-in-laravel/</link>
      <pubDate>Wed, 17 Feb 2016 10:00:00 -0700</pubDate>
      
      <guid>https://benjaminlistwon.com/blog/adding-more-robust-ajax-detection-in-laravel/</guid>
      <description>TL;DR The $request-&amp;gt;ajax() method does not detect XHR sent without an X-Requested-With header, so you‚Äôll want to add the following to your own Request.php file (or whatever base Request class is used by your controllers).
App/Http/Requests/Request.php &amp;lt;?php namespace App\Http\Requests; use Illuminate\Foundation\Http\FormRequest; abstract class Request extends FormRequest { public function ajax() { /* 1. Call the builtin method */ if ($this-&amp;gt;isXmlHttpRequest()) { return true; } /* 2. Then check the Content-Type */ $content_type = $this-&amp;gt;header(&#39;Content-Type&#39;); $allowable_types = array( &#39;application/json&#39;, &#39;application/javascript&#39;, ); if (in_array( strtolower($content_type), $allowable_types)) { return true; } /* 3.</description>
    </item>
    
  </channel>
</rss>